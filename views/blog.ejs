<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/css/blog_style.css" type='text/css'>
  <link rel="stylesheet" href="/css/nav_blog.css" type='text/css'>
  <link rel="stylesheet" href="/css/signing.css" type='text/css'>
  <link rel="stylesheet" href="/css/footer_blog.css" type='text/css'>



  <title>Home | Mpl Blog</title>
</head>

<body>

  <% function getFormattedDate(d) { %>
  <%    let date = new Date(d); %>
  <%    let monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; %>
  <%    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`; %>
  <% } %>

  <div>
    <%- include('partials/navbar') %>
    <%- include('partials/signing') %>

    <section class="container" id="top_section">
      <div id="trending_container">
        <span>
          TRENDING NOW
        </span>
        <span></span>
      </div>
      <div id="highlighted_news">
        <div onclick="window.location.href='<%= `news/${highlighted[0]._id}` %>' ">
          <div class="highlighted_news_content">
            <span>
              <%= highlighted[0].category[0] %>
            </span>
            <p>
              <%= highlighted[0].title %>
            </p>
          </div>
          <!-- <% let url = `${highlighted[0].urlToImage}` %> -->
          <div style="background-image: url(<%= `${highlighted[0].urlToImage}` %>)"></div>
        </div>
        <div>
          <% for(let i=1 ; i < 4 ; i++) { %>
          <div onclick="window.location.href='<%= `news/${highlighted[i]._id}` %>' ">
            <div class="highlighted_news_content" >
              <span>
                <%= highlighted[i].category[0] %>
              </span>
              <p>
                <%= highlighted[i].title %>
              </p>
            </div>
            <!-- <% let url = `${highlighted[0].urlToImage}` %> -->
            <div style="background-image: url(<%= `${highlighted[i].urlToImage}` %>)"></div>
          </div>
          <% } %>
        </div>
      </div>

    </section>

    <section class="container" id="middle_section">
      <div id="left_middle">
        <section id="match_prediction">
          <span class="header">TODAY'S MATCH PREDICTION</span>
          <div>
            <% for (let i=0; i < 5 ; i++) { %>
            <% let link = `news/${matchPredictions[i]._id}` %>
            <div onclick="window.location.href='<%= link %>' ">
              <div>
                <img src="<%=matchPredictions[i].urlToImage%>">
              </div>
              <div>
                <p>
                  <%=matchPredictions[i].title%>
                </p>
                <p>
                  <%=getFormattedDate(matchPredictions[i].publishedAt)%>
                </p>
                <% if(i==0) { %>
                <p>
                  <%=matchPredictions[i].description%>
                </p>
                <% } %>
              </div>
            </div>
            <% } %>
          </div>
        </section>
        <section id="latest_posts">
          <span class="header">Latest Posts</span>
          <div>
            <% latestPosts.forEach(({urlToImage, category, title, _id})=> { %>

            <div onclick="window.location.href='<%= `news/${_id}` %>' ">
              <div>
                <img src="<%= urlToImage %>">
                <span>
                  <%= category[0] %>
                </span>
              </div>
              <p>
                <%= title %>
              </p>
            </div>

            <% }); %>
          </div>
        </section>
      </div>
      <div id="right_middle">
        <section id="digital_games">
          <span class="header">DIGITAL SKILL GAMES</span>
          <div>
            <% digitalGames.forEach(({urlToImage, title, category, _id})=> { %>

            <div onclick="window.location.href='<%= `news/${_id}` %>' ">
              <div style='background-image: url(<%= `${urlToImage}` %>)'>
                <span>
                  <%= category[0] %>
                </span>
              </div>
              <p>
                <%= title %>
              </p>
            </div>

            <% }) %>
          </div>
        </section>
        <section id="popular_trends">
          <span class="header">POPULAR TRENDS</span>
          <div onclick="window.location.href='<%= `news/${popularTrends[0]._id}` %>' ">
            <div style="background-image: url(<%= `${popularTrends[0].urlToImage}` %>)">
              <span>
                <%= popularTrends[0].category[0] %>
              </span>
            </div>
            <div>
              <p>
                <%= popularTrends[0].title %>
              </p>
              <p>
                <%= getFormattedDate(popularTrends[0].publishedAt) %>
              </p>
              <p>
                <%= popularTrends[0].description %>
              </p>
            </div>
          </div>
          <div>
            <% for(let i=1; i < 3 ; i++) { %>
            <div onclick="window.location.href='<%= `news/${popularTrends[i]._id}` %>' ">
              <div style="background-image: url(<%= `${popularTrends[i].urlToImage}` %>)">
                <span>
                  <%= popularTrends[i].category[0] %>
                </span>
              </div>
              <div>
                <p>
                  <%= popularTrends[i].title %>
                </p>
                <p>
                  <%= getFormattedDate(popularTrends[i].publishedAt) %>
                </p>
              </div>
            </div>
            <% } %>
          </div>
      </div>
    </section>
  </div>
  </section>


  <span id="goto_top_btn"><img src="./images/up-arrow.png" width="20px"></span>

  <!-- Footer -->
  <%- include('partials/footer') %>

  <%- include('partials/educationalOnly') %>


  <script>
    function setDate() {
      let days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
      let months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

      let date = new Date();

      let currentDate = days[date.getDay()] + ", " + months[date.getMonth()] + " " + date.getDate() + ", " + date.getFullYear();

      document.getElementById("todays_date").textContent = currentDate;
    }

    setDate();

    // Nav script starts
    let search_ico = document.querySelector("#nav_blog > div > div:nth-of-type(3) > svg");
    search_ico.addEventListener("click", showSearchBox);

    let goto_top_btn = document.getElementById("goto_top_btn");
    goto_top_btn.addEventListener("click", gotoTop);

    let mobile_search = document.getElementById("mobile_search");
    mobile_search.addEventListener("click", showMobileSearch);

    function showMobileSearch() {
      document.getElementById("mobile_search_modal").style.display = "block";
    }

    let mobile_search_close = document.getElementById("mobile_search_close");
    mobile_search_close.addEventListener("click", closeMobileSearch);

    function closeMobileSearch() {
      document.getElementById("mobile_search_modal").style.display = "none";
    }

    let mobile_hamburger = document.getElementById("mobile_hamburger");
    mobile_hamburger.addEventListener("click", showMobileNavOptions);

    function showMobileNavOptions() {
      document.getElementById("mobile_nav_options").style.display = "block";
    }

    let mobile_nav_close = document.querySelector("#close_nav_options");
    close_nav_options.addEventListener("click", closeMobileNavOptions);

    function closeMobileNavOptions() {
      document.getElementById("mobile_nav_options").style.display = "none";
    }

    function setMobileOptionDrop() {
      let options = document.querySelectorAll("#mobile_options_content > ul > li");

      // console.log(options);

      options.forEach(e => {
        let div = e.querySelector("div:nth-of-type(2)");
        let arrow = e.querySelector("div:nth-of-type(1) > img");
        if (div !== null) {
          div.style.display = "none";
          e.addEventListener("click", () => {
            if (div.style.display == "none") {
              div.style.display = "block";
              arrow.src = "./images/down-white-arrow.png";
            } else {
              div.style.display = "none";
              arrow.src = "./images/right-arrow.png";
            }
          });
        }
      })
    }

    setMobileOptionDrop();


    function showSearchBox() {
      let search_box = document.getElementById("search_box");

      search_box.style.display = "block";


      let search_input = document.getElementById("search_input");

      search_input.focus();

      search_input.onblur = () => {
        search_box.style.opacity = "0";
        search_box.style.transform = "translateY(30px)";
        setTimeout(() => {
          search_box.style.display = "none";
          search_box.style.opacity = "1";
          search_box.style.transform = "none";
        }, 200);
      }

    }

    function gotoTop() {
      window.scrollTo({
        top: 0,
        left: 0,
        behavior: 'smooth'
      });
    }

    let changed = false;
    window.onscroll = () => {
      let nav = document.getElementById("nav_blog");
      let top_btn = document.getElementById("goto_top_btn");
      if (window.scrollY > nav.offsetHeight && !changed) {
        nav.classList = "nav_scrolled";
        changed = true;
        top_btn.style.display = "flex";
      } else if (window.scrollY <= nav.offsetHeight) {
        changed = false;
        nav.classList.remove("nav_scrolled");
        top_btn.style.display = "none";
      }
    }

    // Nav script ends

    async function getArticleData(url) {
      try {
        let res = await fetch(url);
        let data = await res.json();
        return data;
      } catch (error) {
        console.log(error);
      }
    }


    let trendingItems;
    async function setTrendingNow() {
      trendingItems = (await getArticleData("https://mplclone.herokuapp.com/articles?limit=5&category=Cricket")).map(e => e.title);

      let counter = 0;
      let trending = document.querySelector("#trending_container > span:nth-of-type(2)");
      trending.textContent = trendingItems[counter];
      trending.style.transition = "opacity 500ms ease, margin-left 500ms ease";
      setTimeout(() => {
        trending.style.opacity = 0;
        trending.style.marginLeft = "0.2rem";
      }, 3700);
      setInterval(() => {
        setTimeout(() => {
          trending.style.opacity = 1;
          trending.style.marginLeft = "2rem";
        }, 200);
        setTimeout(() => {
          trending.style.opacity = 0;
          trending.style.marginLeft = "0.2rem";
        }, 3700);

        counter++;
        trending.textContent = trendingItems[(counter % trendingItems.length)];
      }, 4000);
    }
    setTrendingNow();

    async function getQueryResult(query) {
      try {
        let res = await fetch(`https://mplclone.herokuapp.com/articles/search?query=${query}`);

        let data = await res.json();
        return data;
      } catch (error) {
        console.log(error);
      }
    }

    let searchTimeout;

    function searchDebounce(src, target, items) {
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(() => {
        showSearchMobResult(src, target, items);
      }, 500);
    }

    document.querySelector("#mobile_search_modal > input").addEventListener("input", () => {
      searchDebounce("#mobile_search_modal > input", "search_modal_result", 4)
    });

    document.querySelector("#search_input").addEventListener("input", () => {
      searchDebounce("#search_input", "search_result", 6)
    });

    async function showSearchMobResult(src, target, items) {
      let monthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

      let query = document.querySelector(src);

      let container = document.getElementById(target);

      container.innerHTML = "";

      if (query.value.length == 0) {
        return;
      }

      let result = await getQueryResult(query.value);

      if (result.length == 0) {
        return;
      }

      for (let i = 0; i < items; i++) {
        let div = document.createElement("div");
        div.onclick = () => {
          window.location.href = `/news/${result[i]._id}` ;
        }

        let imgDiv = document.createElement("div");

        let img = document.createElement("img");
        img.src = result[i].urlToImage;

        imgDiv.appendChild(img);

        let detailsDiv = document.createElement("div");

        let title = document.createElement("p");
        title.textContent = result[i].title;


        let storedDate = new Date(result[i].publishedAt);

        let date = document.createElement("p");
        date.textContent = `${monthNames[storedDate.getMonth()]} ${storedDate.getDate()}, ${storedDate.getFullYear()}`;

        detailsDiv.append(title, date);

        div.append(imgDiv, detailsDiv);

        container.append(div);
      }

    }



    // Signing

    document.getElementById("login_btn").addEventListener("click", () => {
      showOverlay('login')
    });
    document.getElementById("join_btn").addEventListener("click", () => {
      showOverlay('signup')
    });
    document.getElementById("login_overlay_close_btn").addEventListener("click", closeOverlay);
    document.getElementById("signup_overlay_close_btn").addEventListener("click", closeOverlay);


    function showOverlay(t) {
      let overlay = document.getElementById("overlay");
      overlay.style.display = "block";
      if (t == "signup") {
        document.getElementById("overlay_signup").style.display = "block";
        document.getElementById("overlay_login").style.display = "none";
      } else if (t == "login") {
        document.getElementById("overlay_signup").style.display = "none";
        document.getElementById("overlay_login").style.display = "block";
      }
      overlay.onscroll
    }

    function setSignOverlay() {
      document.getElementById("overlay_background").addEventListener("click", () => {
        closeOverlay()
      });

      document.getElementById("signup_form").addEventListener("submit", () => {
        SignUp(event)
      });

      document.getElementById("login_form").addEventListener("submit", () => {
        Login(event)
      });
    }

    setSignOverlay();

    async function SignUp(e) {
      e.preventDefault();

      let form = document.getElementById("signup_form");

      let details = {
        name: form.signup_name.value,
        email: form.signup_mail.value,
        password: form.signup_pass.value,
        username: form.signup_username.value,
        mobile: form.signup_mobile.value,
        description: form.signup_description.value,
      }

      // console.log(details);

      details = JSON.stringify(details);

      try {
        let res = await fetch("https://masai-api-mocker.herokuapp.com/auth/register", {
          method: "POST",
          body: details,
          headers: {
            'Content-Type': 'application/json',
          },
        });

        let data = await res.json();

        if (data.error) {
          showSignUpFailed();
        } else {
          showSignUpSuccessful();
        }

      } catch (e) {
        // console.log(e);
      }

    }

    async function Login(e) {
      e.preventDefault();

      document.getElementById("login_failed").style.display = "none";

      let form = document.getElementById("login_form");

      let details = {
        password: form.login_pass.value,
        username: form.login_username.value,
      }

      console.log(details);

      details = JSON.stringify(details);

      try {
        let res = await fetch("https://masai-api-mocker.herokuapp.com/auth/login", {
          method: "POST",
          body: details,
          headers: {
            'Content-Type': 'application/json',
          },
        });

        let data = await res.json();

        // console.log(data);

        if (data.error) {
          showLoginFailed();
        } else {
          fetchUserData(form.login_username.value, data.token);
        }

      } catch (e) {
        // console.log(e);
      }

    }

    function closeOverlay() {
      document.getElementById("overlay").style.display = "none";
    }

    function showSignUpFailed() {
      // alert("failed");
      document.getElementById("signup_failed").style.display = "block";
      document.getElementById("signup_success").style.display = "none";
    }

    function showSignUpSuccessful() {
      // alert("success");
      document.getElementById("signup_failed").style.display = "none";
      document.getElementById("signup_success").style.display = "block";
      setTimeout(() => {
        closeOverlay()
      }, 500);
    }

    async function fetchUserData(username, token) {
      let res = await fetch(`https://masai-api-mocker.herokuapp.com/user/${username}`, {
        headers: {
          'Content-Type': 'application/json',

          Authorization: `Bearer ${token}`,
        },
      });

      let data = await res.json();

      // console.log(data);

      showLoggedUser(data);
    }

    function showLoginFailed() {
      document.getElementById("login_failed").style.display = "block";
    }

    function showLoggedUser(data) {
      let nav_user = document.getElementById("nav_user");
      nav_user.querySelector("#logged_username").innerText = data.username;
      nav_user.style.display = "flex";

      document.getElementById("login_option").style.display = "none";

      closeOverlay();
    }
  </script>


</body>

</html>